using UnityEngine;

// Literal (값) : 
public class Literal : MonoBehaviour
{
    // Start is called once before the first execution of Update after the MonoBehaviour is created
    void Start()
    {
        /*
        //[1] 변수 만들기
        int num;    //정수형 변수
        double su;  //실수형 변수
        bool flag;  //부울형 변수    true혹은 false만가능 
        string str; //문자열 변수
        char c;     //문자형 변수

        sbyte iSbyte  	//8비트 부호가 있는 정수형 변수 선언 및 초기화
        short iInt16 	//16비트 부호가 있는 정수형 변수 선언 및 초기화
        int iInt32  	//32비트 부호가 있는 정수형 변수 선언 및 초기화
        long iInt64 	 //64비트 부호가 있는 정수형 변수 선언 및 초기화

        byte iByte  	//8비트 부호가 있는 정수형 변수 선언 및 초기화        0-255
        ushort iUInt16 	//16비트 부호가 있는 정수형 변수 선언 및 초기화       0-65535 
        uint iUInt32  	//32비트 부호가 있는 정수형 변수 선언 및 초기화       0-4,294,967,295
        ulong iUInt64 	 //64비트 부호가 있는 정수형 변수 선언 및 초기화      0-18,446,744,073,709,551,615

        //[2] 변수에 값을 저장 
        num = 1234;
        su = 3.14159;
        flag = true;         //true , false
        str = "Hello!";
        c = 'a';

        //[3] 변수 사용하기 
        Debug.Log("num: "+num);
        Debug.Log("su: " + su);
        Debug.Log("flag: " + flag);
        Debug.Log("str: " + str);
        Debug.Log("c: " + c);

        Debug.Log("Message: "+ message);  //[1] "Message: "+ message 문자열 더하기 연산
        Debug.Log($"Message: {message}"); //[2] $"Message: {message}"문자열 보관법으로 출력

        gettype: 변수의 타입 읽어오기

        Var : 암시적으로 형식화된 로컬 변수
        var 선언시 데이터 초기화를 반드시 한다  (만능 키)


         string strNumber = "1234";

        int number1 = System.Convert.ToInt32(strNumber);
        Debug.Log($"{number1}-{number1.GetType()}");

        int number2 = int.Parse(strNumber);
        Debug.Log($"{number2}-{number2.GetType()}");

        int number3 = System.Int32.Parse(strNumber);
        Debug.Log($"{number3}-{number3.GetType()}");

         //자리 바꾸기
        temp = i;   //임시변수 (temp) 에 i 값 저장 
        i = j;      //i 변수에 j 값 저장
        j = temp;   //j 변수에 임시변수에 저장되었던 i값을 저장


        */
    }
}
